beverageProfileSchema{
  query{
    getBeverages(userEmail:String!){
      beverageList: [Beverage!]
    }  
    getRecipes(userEmail:String!){
      recipeList: [Recipe!]
    }
    getOffers(userEmail:String!){
      offerList: [Offer!]
    }
    getReviews(userEmail:String!){
      reviewList: [Review!]
    }
  }
  mutation{
    addBeverageScore(beverageScore: Score!){
      beverageScore: Score!
    }
    updateBeverageScore(beverageScore: Score!){
      beverageScore: Score!
    }
    deleteBeverageScore(beverageScore: Score!){
      beverageScore: Score!
    }

    addRecipeScore(recipeScore: Score!){
      recipeScore: Score!
    }
    updateRecipeScore(recipeScore: Score!){
      recipeScore: Score!
    }
    deleteRecipeScore(recipeScore: Score!){
      recipeScore: Score!
    }

    addOffer(offer: Offer){
      offer: Offer
    }
    updateOffer(offer: Offer){
      offer: Offer
    }
    deleteOffer(offer: Offer){
      offer: Offer
    }

    addReview(review: Review){
      review: Review
    }
    updateReview(review: Review){
      review: Review
    }
    deleteReview(review: Review){
      review: Review
    }

  }
}

enum ScorableItem{
  BEVERAGE
  RECIPE
  REVIEW
  OFFER
}

type Score{
  scoreValue: Int!
  userEmail: String!
  entityType: ScorableItem!
  entityID: ID!
}

type Beverage{
  beverageID: ID!
  beverageName: String!
  beverageUrl: String
  beverageImageUrl: String
  beverageIngredientsImageUrl: String
  beverageNutritionImageUrl: String
  beverageDescription: String
  isMadeOfFruit: Fruit
  isMadeOfVegetable: Vegetable
  hasHealthLabel: HealthLabel
  nutritionInformation: NutritionInformation
  hasProvenanceCountry: Country
  hasCategory: Category
  hasIngredient: Ingredient
  hasOffer: Offer
  hasReview: Review
  hasRecipe: Recipe
  hasBeverageScores: [Score!]
}

type Recipe{
  recipeID: ID!
  recipeName: String!
  recipeDescription: String
  recipeImageUrl: String
  recipeShareAs: String
  recipeSource: String
  recipeURI: String
  recipeURL: String
  nutritionInformation: NutritionInformation
  hasHealthLabel: HealthLabel
  hasIngredient: Ingredient
  isRecipeFor: Beverage
  hasRecipeScores: [Score!]
}

type Review{
  reviewAuthorEmail: String!
  reviewID: ID!
  reviewDescription: String!
  hasReviewScores: [Score!]
}

type Offer{
  offerAuthorEmail: String!
  offerID: ID!
  offerPrice: Int
  offerCurrency: Currency
  offerDescription: String
  hasOfferScores: [Score!]
}

type NutritionInformation {
  calciumContent: Int
  calories: Int
  carbohydrateContent:Int
  cholesterolContent: Int
  fatContent: Int
  fiberContent: Int
  ironContent: Int
  magnesiumContent: Int
  phosphorusContent: Int
  potassiumContent: Int
  proteinContent: Int
  quantity: Int
  sodiumContent: Int
  sugarContent: Int
  vitaminAContent: Int
  vitaminB12Content: Int
  vitaminB6Content: Int
  vitaminCContent: Int
  vitaminDContent: Int
  vitaminEContent: Int
  vitaminKContent: Int
  zincContent: Int
}

type Ingredient{
  ingredientName: String
}

type Category{
  categoryName: String
}

type Country{
  countryName: String
}

type HealthRestriction{
  healthRestrictionName: String 
}

type HealthLabel{
  healthLabelName: String
}

type Fruit{
  fruitName: String
}
type Vegetable{
   vegetableName: String
}

enum BeverageType {
  COFFEE
  DAIRYDRINK
  ENERGYDRINK
  JUICE
  NECTAR
  MILKSHAKE
  MOCKTAIL
  NONALCOHOLICBEER
  SMOOTHIE
  SYRUP
  TEA
  WATER
}




















