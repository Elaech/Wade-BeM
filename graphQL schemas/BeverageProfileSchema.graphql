beverageProfileSchema{
  query{
    getBeverages(userEmail:String!){
      beverageID: ID!
      beverageName: String!
      beverageUrl: String
      beverageImageUrl: String
      beverageIngredientsImageUrl: String
      beverageNutritionImageUrl: String
      beverageDescription: String
      isMadeOfFruit: Fruit
      isMadeOfVegetable: Vegetable
      hasHealthLabel: HealthLabel
      nutritionInformation: NutritionInformation
      hasProvenanceCountry: Country
      hasCategory: Category
      hasIngredient: Ingredient
      hasOffer: Offer
      hasReview: Review
      hasRecipe: Recipe
      hasBeverageScore: Score!
    }  
    getRecipes(userEmail:String!){
      recipeID: ID!
      recipeName: String!
      recipeDescription: String
      recipeImageUrl: String
      recipeShareAs: String
      recipeSource: String
      recipeURI: String
      recipeURL: String
      nutritionInformation: NutritionInformation
      hasHealthLabel: HealthLabel
      hasIngredient: Ingredient
      isRecipeFor: Beverage
      hasRecipeScore: Score!
    }
    getOffers(userEmail:String!){
      offerAuthorEmail: String!
      offerID: ID!
      offerPrice: Int
      offerCurrency: String
      offerDescription: String
    }
    getReviews(userEmail:String!){
      reviewAuthorEmail: String!
      reviewID: ID!
      reviewDescription: String
      hasReviewRating: Int
    }
  }
  mutation{
    addBeverageScore(beverageScore: Score!){
      beverageScore: Score!
    }
    updateBeverageScore(beverageScore: Score!){
      beverageScore: Score!
    }
    deleteBeverageScore(beverageScore: Score!){
      beverageScore: Score!
    }

    
    addRecipeScore(recipeScore: Score!){
      recipeScore: Score!
    }
    updateRecipeScore(recipeScore: Score!){
      recipeScore: Score!
    }
    deleteRecipeScore(recipeScore: Score!){
      recipeScore: Score!
    }


    addOffer(offerAuthorEmail:String!, offerPrice: Int!, offerCurrency: String!, offerDescription: String!){
      offerAuthorEmail: String!
      offerID: ID!
      offerPrice: Int!
      offerCurrency: String!
      offerDescription: String!
    }
    updateOffer(offerAuthorEmail:String!, offerID:ID!, offerPrice: Int, offerCurrency: String, offerDescription: String){
      offerAuthorEmail: String!
      offerID: ID!
      offerPrice: Int
      offerCurrency: String
      offerDescription: String
    }
    deleteOffer(offerAuthorEmail:String!, offerID: ID!){
      offerAuthorEmail: String!
      offerID: ID!
      offerPrice: Int
      offerCurrency: String
      offerDescription: String
    }

    addReview(reviewAuthorEmail:String!, reviewDescription: String!, hasReviewRating: Int!){
      reviewAuthorEmail:String!
      reviewDescription: String!
      hasReviewRating: Int!
    }
    updateReview(reviewAuthorEmail:String!, reviewID: ID!,  reviewDescription: String, hasReviewRating: Int){
      reviewAuthorEmail:String!
      reviewID: ID!
      reviewDescription: String
      hasReviewRating: Int
    }
    deleteReview(reviewAuthorEmail:String!, reviewID: ID!){
      reviewAuthorEmail:String!
      reviewID: ID!
      reviewDescription: String
      hasReviewRating: Int
    }

  }
}

type Score{
  scoreID: ID!
  scoreValue: Int!
  userEmail: String!
  beverageID: ID!
}

type NutritionInformation {
  calciumContent: Int
  calories: Int
  carbohydrateContent:Int
  cholesterolContent: Int
  fatContent: Int
  fiberContent: Int
  ironContent: Int
  magnesiumContent: Int
  phosphorusContent: Int
  potassiumContent: Int
  proteinContent: Int
  quantity: Int
  sodiumContent: Int
  sugarContent: Int
  vitaminAContent: Int
  vitaminB12Content: Int
  vitaminB6Content: Int
  vitaminCContent: Int
  vitaminDContent: Int
  vitaminEContent: Int
  vitaminKContent: Int
  zincContent: Int
}

type Ingredient{
  ingredientName: String
}

type Category{
  categoryName: String
}

type Country{
  countryName: String
}

type HealthRestriction{
  healthRestrictionName: String 
}

type HealthLabel{
  healthLabelName: String
}

type Fruit{
  fruitName: String
}
type Vegetable{
   vegetableName: String
}

enum BeverageType {
  COFFEE
  DAIRYDRINK
  ENERGYDRINK
  JUICE
  NECTAR
  MILKSHAKE
  MOCKTAIL
  NONALCOHOLICBEER
  SMOOTHIE
  SYRUP
  TEA
  WATER
}

type Beverage{
  beverageID: ID!
  beverageName: String!
  beverageUrl: String
  beverageImageUrl: String
  beverageIngredientsImageUrl: String
  beverageNutritionImageUrl: String
  beverageDescription: String
  isMadeOfFruit: Fruit
  isMadeOfVegetable: Vegetable
  hasHealthLabel: HealthLabel
  nutritionInformation: NutritionInformation
  hasProvenanceCountry: Country
  hasCategory: Category
  hasIngredient: Ingredient
  hasOffer: Offer
  hasReview: Review
  hasRecipe: Recipe
  hasBeverageScores: [Score!]
}

type Recipe{
  recipeID: ID!
  recipeName: String!
  recipeDescription: String
  recipeImageUrl: String
  recipeShareAs: String
  recipeSource: String
  recipeURI: String
  recipeURL: String
  nutritionInformation: NutritionInformation
  hasHealthLabel: HealthLabel
  hasIngredient: Ingredient
  isRecipeFor: Beverage
  hasRecipeScores: [Score!]
}

type Review{
  reviewID: ID!
  reviewDescription: String!
  hasReviewScores: [Score!]
}

type Offer{
  offerID: ID!
  offerPrice: Int
  offerCurrency: Currency
  offerDescription: String
}




















