type NutritionInformation {
  calciumContent: Int
  calories: Int
  carbohydrateContent:Int
  cholesterolContent: Int
  fatContent: Int
  fiberContent: Int
  ironContent: Int
  magnesiumContent: Int
  phosphorusContent: Int
  potassiumContent: Int
  proteinContent: Int
  quantity: Int
  sodiumContent: Int
  sugarContent: Int
  vitaminAContent: Int
  vitaminB12Content: Int
  vitaminB6Content: Int
  vitaminCContent: Int
  vitaminDContent: Int
  vitaminEContent: Int
  vitaminKContent: Int
  zincContent: Int
}

type Score{
  scoreID: ID!
  scoreValue: Int!
  userEmail: String!
  beverageID: ID!
}

type Ingredient{
  ingredientName: String
}

type Category{
  categoryName: String
}

type Country{
  countryName: String
}

type HealthRestriction{
  healthRestrictionName: String 
}

type HealthLabel{
  healthLabelName: String
}

type Fruit{
  fruitName: String
}
type Vegetable{
   vegetableName: String
}

enum BeverageType {
  COFFEE
  DAIRYDRINK
  ENERGYDRINK
  JUICE
  NECTAR
  MILKSHAKE
  MOCKTAIL
  NONALCOHOLICBEER
  SMOOTHIE
  SYRUP
  TEA
  WATER
}

type BeverageQuery{
  beverageID: ID!
  beverageName: String!
  beverageUrl: String
  beverageImageUrl: String
  beverageIngredientsImageUrl: String
  beverageNutritionImageUrl: String
  beverageDescription: String
  isMadeOfFruit: Fruit
  isMadeOfVegetable: Vegetable
  hasHealthLabel: HealthLabel
  nutritionInformation: NutritionInformation
  hasProvenanceCountry: Country
  hasCategory: Category
  hasIngredient: Ingredient
  hasOffer: Offer
  hasReview: Review
  hasRecipe: Recipe
  hasBeverageScore: Score!
}

type AddBeverageScoreMutation{
  beverageScore: Score!
}

type UpdateBeverageScoreMutation{
  beverageScore: Score!
}

type DeleteBeverageScoreMutation{
  beverageScore: Score!
}



type RecipeQuery{
  recipeID: ID!
  recipeName: String!
  recipeDescription: String
  recipeImageUrl: String
  recipeShareAs: String
  recipeSource: String
  recipeURI: String
  recipeURL: String
  nutritionInformation: NutritionInformation
  hasHealthLabel: HealthLabel
  hasIngredient: Ingredient
  isRecipeFor: Beverage
  hasRecipeScore: Score!
}

type AddRecipeScoreMutation{
  recipeScore: Score!
}

type UpdateRecipeScoreMutation{
  recipeScore: Score!
}

type DeleteRecipeScoreMutation{
  recipeScore: Score!
}


type OfferQuery{
  offerID(email:String!): ID!
  offerPrice(email:String!): Int
  offerCurrency(email:String!): String
  offerDescription(email:String!): String
}

type AddOfferMutation{
  offerPrice(email:String!): Int!
  offerCurrency(email:String!): String!
  offerDescription(email:String!): String!
}

type UpdateOfferMutation{
  offerID(email:String!): ID!
  offerPrice(email:String!): Int
  offerCurrency(email:String!): String
  offerDescription(email:String!): String
}

type DeleteOfferMutation{
  offerID(email:String!): ID!
  offerPrice(email:String!): Int
  offerCurrency(email:String!): String
  offerDescription(email:String!): String
}



type ReviewQuery{
  reviewID(email:String!): ID!
  reviewDescription(email:String!): String
  hasReviewRating(email:String!): Int
}

type AddReviewMutation{
  reviewDescription(email:String!): String!
  hasReviewRating(email:String!): Int!
}

type UpdateReviewMutation{
  reviewID(email:String!): ID!
  reviewDescription(email:String!): String
  hasReviewRating(email:String!): Int
}

type DeleteReviewMutation{
  reviewID(email:String!): ID!
  reviewDescription(email:String!): String
  hasReviewRating(email:String!): Int
}