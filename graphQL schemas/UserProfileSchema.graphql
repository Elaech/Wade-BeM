userProfileSchema{
  query{
    getUser(email: String!){
      email: String!
      firstName: String
      lastName: String
      age: Int
      gender: Gender
      livesInCountry: Country
      hasNationality: Nationality
      hasHealthRestriction: [HealthRestriction!]
    }
  }
  mutation{
    addUser(email: String!, firstName:String, lastName:String, age:Int, gender: Gender,livesInCountry: Country,
            hasNationality: Nationality, hasHealthRestriction: [HealthRestriction!] ){
      email: String!
      firstName: String
      lastName: String
      age: Int
      gender: Gender
      livesInCountry: Country
      hasNationality: Nationality
      hasHealthRestriction: [HealthRestriction!]
    }
    deleteUserFields(email: String!, firstName:String, lastName:String, age:Int, gender: Gender,livesInCountry: Country,
                      hasNationality: Nationality, hasHealthRestriction: [HealthRestriction!] ){
      firstName: String
      lastName: String
      age: Int
      gender: Gender
      livesInCountry: Country
      hasNationality: Nationality
      hasHealthRestriction: [HealthRestriction!]
    }
    updateUserFields(email: String!, firstName:String, lastName:String, age:Int, gender: Gender,livesInCountry: Country,
                      hasNationality: Nationality, hasHealthRestriction: [HealthRestriction!] ){
      firstName: String
      lastName: String
      age: Int
      gender: Gender
      livesInCountry: Country
      hasNationality: Nationality
      hasHealthRestriction: [HealthRestriction!]
    }
  }
}

type UserProfile {
  email: String!
  firstName: String
  lastName: String
  age: Int
  gender: Gender
  livesInCountry: Country
  hasNationality: Nationality
  hasHealthRestriction: [HealthRestriction!]
}

enum Gender {
  FEMALE
  MALE
}

type Country{
  name: String
}

type Nationality{
  name: String
}

type HealthRestriction{
  name: String 
}







